{
  "general": {
    "dumpCraftingConfig": {
      "value": false,
      "comment": "If true, then all recipes for all items in packs will be dumped into the config file at boot.  WARNING: this will overwrite your existing crafting overrides file!"
    },
    "opSignEditingOnly": {
      "value": false,
      "comment": "If true, only OPs will be able to edit signs on servers.  Does not affect client worlds."
    },
    "opPickupVehiclesOnly": {
      "value": false,
      "comment": "If true, only OPs will be able to pick up vehicles with wrenches.  Does not affect client worlds."
    },
    "creativePickupVehiclesOnly": {
      "value": false,
      "comment": "If true, vehicles can only be picked up in creative mode."
    },
    "blockBreakage": {
      "value": true,
      "comment": "Whether or not vehicles can break blocks when they hit them.  If false, vehicles will simply stop when they hit blocks."
    },
    "noclipVehicles": {
      "value": false,
      "comment": "If true, vehicles will not be able to collide with blocks.  This also prevents them from moving if they do not have wheels on them, as otherwise they would phase through the ground into the void."
    },
    "creativeDamage": {
      "value": false,
      "comment": "If true, damage from vehicles and guns will be applied to creative players."
    },
    "speedFactor": {
      "value": 0.35,
      "comment": "Factor to apply to vehicle movement.  1 is the realistic value, but this makes vehicles move too fast for Minecraft. Adjust with caution."
    },
    "fuelUsageFactor": {
      "value": 1.0,
      "comment": "Factor times which engines use fuel.  Change this if you think engines use fuel too fast or slow."
    },
    "engineHoursFactor": {
      "value": 1.0,
      "comment": "Factor times which engines hours accumulate.  Change this if you want to adjust how fast engines wear out."
    },
    "itemWeights": {
      "comment1": "The following section is used for calculating item weights.  Any item that contains the text bits will have its weight multiplied by the following factor.",
      "comment2": "This mass factors into vehicle performance, with particular emphasis on vehicle payloads.  Some defaults are presented here, but you can add/remove to your liking.",
      "comment3": "Note that the part of the name searched is the item\u0027s registry name, NOT the in-game display name.  This is similar to what is in the /give command.",
      "weights": {
        "gold": 4.0,
        "diamond": 4.0,
        "ore": 2.5,
        "iron": 4.0,
        "coal": 2.0,
        "stone": 1.5
      }
    }
  },
  "damage": {
    "explosions": {
      "value": true,
      "comment": "Whether or not vehicles explode when crashed or shot down."
    },
    "wheelBreakage": {
      "value": true,
      "comment": "Whether or not wheels can be broken (go flat)."
    },
    "wheelDamageIgnoreVelocity": {
      "value": false,
      "comment": "Whether or not velocity is ignored when calculating wheel damage."
    },
    "propellerDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by a propeller."
    },
    "jetDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by a jet engine."
    },
    "wheelDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by wheels on vehicles."
    },
    "crashDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by crashes."
    },
    "bulletDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by bullets on vehicles."
    },
    "engineLeakProbability": {
      "value": 0.01,
      "comment": "Chance an engine will spring a leak if hit.  Explosions cause 10x this chance."
    },
    "crashItemDropPercentage": {
      "value": 0.75,
      "comment": "Percent that a crafting ingredient will be dropped when a vehicle is crashed.  Note that fire/explosions may destroy these items if enabled, so just because they drop does not mean you will get all of them."
    },
    "wheelDamageMinimumVelocity": {
      "value": 0.2,
      "comment": "Minimum velocity (blocks/second) which vehicles must be going to damage entities with their wheels."
    }
  },
  "fuel": {
    "comment1": "The following section is used for fuel configs for engines.  Each entry here is a single fuel type for engines.",
    "comment2": "Inside each entry exist values for the potency of the fluids that can be considered to be that fuel type.",
    "comment3": "You can make engines take different types of fluids for their fuels by editing these values.  See the in-game handbook for more information.",
    "fuels": {
      "diesel": {
        "diesel": 1.0,
        "lava": 1.0,
        "oil": 0.5,
        "biodiesel": 0.8
      },
      "electric": {
        "lava": 1.0
      },
      "avgas": {
        "lava": 1.0,
        "gasoline": 1.0
      },
      "gasoline": {
        "lava": 1.0,
        "gasoline": 1.0,
        "ethanol": 0.85
      },
      "biodiesel": {
        "lava": 1.0
      }
    }
  },
  "client": {
    "mouseYoke": {
      "value": false,
      "comment": "Enable mouse yoke for vehicles? Prevents looking around unless unlocked.  Think MCHeli controls."
    },
    "kbOverride": {
      "value": true,
      "comment": "Should keyboard controls be ignored when a joystick control is mapped?  Leave true to free up the keyboard while using a joysick."
    },
    "simpleThrottle": {
      "value": true,
      "comment": "If true, then vehicles will automatically go into reverse after stopped with the brake rather than staying stopped and waiting for you to shift.  When going in reverse, the opposite is true: the vehicle will shift into forwards when pressing forwards when stopped.  Additionally, the parking brake will automatically be set when leaving the vehicle.  Incompatible with joysticks."
    },
    "autostartEng": {
      "value": true,
      "comment": "If true, engines will automatically start when a driver enters a vehicle, and will turn off when they leave.  The parking brake will also be applied when leaving the vehicle.  Note: this does not bypass the fuel system."
    },
    "renderHUD_1P": {
      "value": true,
      "comment": "If false, the HUD in vehicles will not render in 1st-person mode."
    },
    "renderHUD_3P": {
      "value": true,
      "comment": "If false, the HUD in vehicles will not render in 3rd-person mode."
    },
    "fullHUD_1P": {
      "value": false,
      "comment": "If true, the full-size HUD will render in 1st-person rather than the half-size HUD."
    },
    "fullHUD_3P": {
      "value": false,
      "comment": "If true, the full-size HUD will render in 3rd-person rather than the half-size HUD."
    },
    "transpHUD_1P": {
      "value": false,
      "comment": "If true, the background textures for the HUD will not be rendered in 1st-person."
    },
    "transpHUD_3P": {
      "value": false,
      "comment": "If true, the background textures for the HUD will not be rendered in 1st-person."
    },
    "renderWindows": {
      "value": true,
      "comment": "Should the glass on windows be rendered on vehicles?"
    },
    "innerWindows": {
      "value": false,
      "comment": "Should the glass on windows be rendered on the inside of the vehicle?  Note: if renderWindows is false, this config has no effect."
    },
    "vehicleBeams": {
      "value": true,
      "comment": "If false, beams on vehicles will not render."
    },
    "blockBeams": {
      "value": true,
      "comment": "If false, beams on blocks (decor) will not render."
    },
    "flareBlending": {
      "value": false,
      "comment": "If true, light flares from vehicles and lamps will not do brightness blending.  Normally false, but can be set to true if it makes shaders better."
    },
    "beamBlending": {
      "value": true,
      "comment": "If false, beam-based lights from vehicles and lamps will not do brightness blending.  Useful if you have shaders and this is causing troubles."
    },
    "beamRender": {
      "value": true,
      "comment": "If false, beam-based lights from vehicles and lamps will not do brightness blending.  Useful if you have shaders and this is causing troubles."
    },
    "lightsPass0": {
      "value": false,
      "comment": "If true, light rendering (and possibly blending) will happen on the first (solid) render pass.  For performance and compatibility, this should normally be false, but may be set to true to get proper light blending with shaders."
    },
    "vehicleBlklt": {
      "value": false,
      "comment": "If true, vehicles will spawn invisible light blocks to force shaders to render them brighter.  Use this only if the other light options fail to work."
    },
    "devMode": {
      "value": false,
      "comment": "If enabled, MTS will re-load all resources every time the config key (P) is pressed.  This includes textures for vehicles and parts, JSON files, and OBJ models.  This is intended for use in pack creation with pack components being placed in an un-zipped resource pack.  Note that every re-load will also re-load EVERY resource, not just MTS resources.  Make sure not to have lots of mods installed when you are doing this!"
    },
    "renderReductionHeight": {
      "value": 250,
      "comment": "When riding in a vehicle above this height MTS will reduce the render distance to 1.  This provides a significant speedup for worldgen and render lag.  Note that this is only active on Singleplayer."
    },
    "controlSurfaceCooldown": {
      "value": 4,
      "comment": "How long (in ticks) it takes before control surfaces try to return to their natural angle.  This is not used when using a joystick."
    },
    "steeringIncrement": {
      "value": 20,
      "comment": "How many units (1/10 of a degree) to turn the wheels on vehicles for every tick the button is held down.  This is not used when using a joystick."
    },
    "flightIncrement": {
      "value": 6,
      "comment": "How many units (1/10 of a degree) to move the elevators and ailerons on aircraft for every tick the button is held down.  This is not used when using a joystick."
    },
    "joystickDeadZone": {
      "value": 0.03,
      "comment": "Dead zone for joystick axis.  This is NOT joystick specific."
    }
  },
  "controls": {
    "keyboard": {
      "aircraft.mod": {
        "keyCode": 54
      },
      "aircraft.camlock": {
        "keyCode": 157
      },
      "aircraft.yaw_r": {
        "keyCode": 38
      },
      "aircraft.yaw_l": {
        "keyCode": 36
      },
      "aircraft.pitch_u": {
        "keyCode": 31
      },
      "aircraft.pitch_d": {
        "keyCode": 17
      },
      "aircraft.roll_r": {
        "keyCode": 32
      },
      "aircraft.roll_l": {
        "keyCode": 30
      },
      "aircraft.throttle_u": {
        "keyCode": 23
      },
      "aircraft.throttle_d": {
        "keyCode": 37
      },
      "aircraft.flaps_u": {
        "keyCode": 21
      },
      "aircraft.flaps_d": {
        "keyCode": 35
      },
      "aircraft.brake": {
        "keyCode": 48
      },
      "aircraft.panel": {
        "keyCode": 22
      },
      "aircraft.radio": {
        "keyCode": 12
      },
      "aircraft.gun": {
        "keyCode": 57
      },
      "aircraft.zoom_i": {
        "keyCode": 201
      },
      "aircraft.zoom_o": {
        "keyCode": 209
      },
      "aircraft.js_inhibit": {
        "keyCode": 70
      },
      "car.mod": {
        "keyCode": 54
      },
      "car.camlock": {
        "keyCode": 157
      },
      "car.turn_r": {
        "keyCode": 32
      },
      "car.turn_l": {
        "keyCode": 30
      },
      "car.gas": {
        "keyCode": 17
      },
      "car.brake": {
        "keyCode": 31
      },
      "car.panel": {
        "keyCode": 22
      },
      "car.shift_u": {
        "keyCode": 19
      },
      "car.shift_d": {
        "keyCode": 33
      },
      "car.horn": {
        "keyCode": 46
      },
      "car.radio": {
        "keyCode": 74
      },
      "car.gun": {
        "keyCode": 57
      },
      "car.zoom_i": {
        "keyCode": 201
      },
      "car.zoom_o": {
        "keyCode": 209
      },
      "car.lights": {
        "keyCode": 72
      },
      "car.turnsignal_l": {
        "keyCode": 71
      },
      "car.turnsignal_r": {
        "keyCode": 73
      },
      "car.js_inhibit": {
        "keyCode": 70
      },
      "aircraft.gun_fire": {
        "keyCode": 57
      },
      "aircraft.gun_switch": {
        "keyCode": 47
      },
      "car.gun_fire": {
        "keyCode": 57
      },
      "car.gun_switch": {
        "keyCode": 47
      }
    },
    "joystick": {
      "aircraft.mod": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.camlock": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.yaw": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.pitch": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.roll": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.throttle": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.flaps_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.flaps_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.brake": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.brake_analog": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.panel": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.park": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.radio": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.gun": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.zoom_i": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.zoom_o": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.changeview": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_a": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_yaw_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_yaw_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_pitch_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_pitch_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_roll_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_roll_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.reverse": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.js_inhibit": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.mod": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.camlock": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.turn": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.gas": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.brake": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.brake_analog": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.panel": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.shift_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.shift_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.horn": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.park": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.radio": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.gun": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.zoom_i": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.zoom_o": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.changeview": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_a": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.lights": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.turnsignal_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.turnsignal_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.js_inhibit": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.gun_fire": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.gun_switch": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.gun_fire": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.gun_switch": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      }
    }
  }
}